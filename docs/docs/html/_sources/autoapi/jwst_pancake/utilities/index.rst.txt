:py:mod:`jwst_pancake.utilities`
================================

.. py:module:: jwst_pancake.utilities


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   jwst_pancake.utilities.determine_pandeia_offset
   jwst_pancake.utilities.stellar_spectrum
   jwst_pancake.utilities.pandeia_spectrum
   jwst_pancake.utilities.user_spectrum
   jwst_pancake.utilities.normalise_spectrum
   jwst_pancake.utilities.normalize_spectrum
   jwst_pancake.utilities.query_simbad
   jwst_pancake.utilities.convert_spt_to_pandeia
   jwst_pancake.utilities.optimise_readout
   jwst_pancake.utilities.optimize_readout
   jwst_pancake.utilities.compute_magnitude
   jwst_pancake.utilities.equatorial_to_ecliptic



.. py:function:: determine_pandeia_offset(config)

   Uses Pandeia's PSF library to determine which PSF offset pandeia would use for a particular
   configuration (for comparison with the offset that pancake would use in on-the-fly PSF
   generation).


.. py:function:: stellar_spectrum(stellar_type, bandpass, magnitude)

   Create a spectrum dictionary that assumes a Phoenix model with a key found in pandeia, and set
   the magnitude to the provided value in the provided bandpass (in ABMAG)


.. py:function:: pandeia_spectrum(stellar_type)

   Generate a spectrum using the Pandeia Phoenix data files. 
   Returns two arrays containing the wavelength and flux values, unormalised. 


.. py:function:: user_spectrum(filename, wave_unit='micron', flux_unit='mJy')

   Read in a user spectrum from a specified file. 


.. py:function:: normalise_spectrum(input_wave, input_flux, norm_val=5, norm_unit='vegamag', norm_bandpass='2mass_ks')


.. py:function:: normalize_spectrum(*args, **kwargs)


.. py:function:: query_simbad(query_string, query_timeout_sec=5.0, default_spt='a0v', verbose=True)

   Query simbad for details on a target object, adapted from the JWST Coronagraphic Visibility Tool
   Will in current state attempt to extract: RA, Dec, Spectral Type and Kmagnitude


.. py:function:: convert_spt_to_pandeia(raw_spectral_type)

   Function to take a spectral type string, either from Simbad or directly from the user, and return an approximation 
   that Pandeia can use. If the spectral type string cannot be understood, then the spectral type will be assumed as A0V


.. py:function:: optimise_readout(obs_dict, t_exp, optimise_margin, min_sat=1e-06, max_sat=1)


.. py:function:: optimize_readout(*args, **kwargs)


.. py:function:: compute_magnitude(spectrum_wave, spectrum_flux, filt, wave_unit='micron', flux_unit='mJy')


.. py:function:: equatorial_to_ecliptic(ra, dec, form=None, verbose=False)


