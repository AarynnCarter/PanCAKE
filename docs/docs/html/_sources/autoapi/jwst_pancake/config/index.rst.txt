:py:mod:`jwst_pancake.config`
=============================

.. py:module:: jwst_pancake.config


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   jwst_pancake.config.EngineConfiguration




.. py:class:: EngineConfiguration(**kwargs)

   Bases: :py:obj:`object`

   A class to consolidate the options for customizing
   calculations made with the Pandiea engine.

   Users aren't expected to interact with this class
   directly. Use the engine.options object instead.

   Could add type checking in the @property.setter
   methods.

   .. py:method:: current_config(self)
      :property:

      A space to store a pandeia configuration dictionary for inspection at runtime.


   .. py:method:: verbose(self)
      :property:


   .. py:method:: current_options(self)
      :property:

      Stores all configuration options in a dictionary, and returns that dictionary.


   .. py:method:: save_options(self)

      The configuration object has room for a single backed-up option set. This is useful for
      storing a default set before running a calculation, so that you can fiddle with the 
      parameters, run the calculation, and then restore everything to what it was before you
      started fiddling. Note that there is *only* one such built-in save, so if you want to save
      a set of parameters you've created without overwriting that save, you should call the
      current_options parameter and store the resulting dictionary somewhere.


   .. py:method:: restore_options(self)

      This restores whatever is stored in self._saved_options. If there's nothing there, it will 
      have no effect (rather than crashing your program, so there's that at least). Note that it 
      does *not* delete the configuration stored in self._saved_options.


   .. py:method:: restore_defaults(self)

      Restore all parameters to their default values.


   .. py:method:: pandeia_instrument_config(aperture)
      :staticmethod:


   .. py:method:: cache(self)
      :property:

      Caching can currently be done one of three ways:
          - LRU RAM cache ('ram')
          - On-disk cache ('disk')
          - No caching ('none')


   .. py:method:: noise(self)
      :property:

      Sets noise parameters. The default is for everything to be turned on.


   .. py:method:: effects(self)
      :property:

      Sets pandeia effects (background, saturation, IPC). The default is for everything to be turned on.


   .. py:method:: wave_sampling(self)
      :property:

      Pandeia defaults to ~200 wavelength samples for imaging
      This is slow and unlikely to significantly improve the
      accuracy of coronagraphic performance predictions.
      Setting wave_sampling to 10-20 should be sufficient,
      and translates to a time savings of about 10.
      Leaving it at None sets it to Pandeia's default.


   .. py:method:: on_the_fly_PSFs(self)
      :property:

      Avoid Pandeia's precomputed PSFs and recompute in WebbPSF as needed?


   .. py:method:: on_the_fly_webbpsf_options(self)
      :property:

      A dictionary of extra options for configuring the PSF 
      calculation ad hoc. Note some options are overridden 
      in get_psf_on_the_fly().

      See WebbPSF documentation for more details.


   .. py:method:: on_the_fly_webbpsf_opd(self)
      :property:

      Allow overriding the default OPD selection when 
      computing PSFs on the fly.

      See the WebbPSF documentation.


   .. py:method:: on_the_fly_oversample(self)
      :property:

      A dictionary of extra options for configuring the PSF 
      calculation ad hoc. Note some options are overridden 
      in get_psf_on_the_fly().

      See WebbPSF documentation for more details.


   .. py:method:: pandeia_fixed_seed(self)
      :property:

      By default, the pandeia engine uses a fixed seed.
      This has undesirable results for many coronagraphy
      applications. Pandeia-Coronagraphy disables this
      by default. Restore the fixed seed by toggling
      this to True.


   .. py:method:: pandeia_noise(self)
      :property:

      Allows access to the pandeia noise configuration


   .. py:method:: pandeia_effects(self)
      :property:

      Allows access to the pandeia noise configuration


   .. py:method:: set_crs(self, value)

      Allows for cosmic rays to be turned on or off in the simulation


   .. py:method:: set_darkcurrent(self, value)

      Allows for dark current to be turned on or off in the simulation


   .. py:method:: set_ffnoise(self, value)

      Allows for flatfield noise to be turned on or off in the simulation


   .. py:method:: set_readnoise(self, value)

      Allows for readnoise to be turned on or off in the simulation


   .. py:method:: set_rn_correlation(self, value)

      Allows for readnoise correlation to be turned on or off in the simulation


   .. py:method:: set_background(self, value)

      Allows for background counts to be turned on or off in the simulation


   .. py:method:: set_ipc(self, value)

      Allows for inter-pixel capacitance to be turned on or off in the simulation


   .. py:method:: set_saturation(self, value)

      Allows for detector saturation to be turned on or off in the simulation



